#github
name: BMI application workflow
on:
  workflow_dispatch:

  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/app-workflow.yaml'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/app-workflow.yaml'

jobs:
  project-build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install

      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify


  docker-build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: self-hosted
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into the Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Run package
        run: mvn package

      - name: Test cimage
        run: chmod +x script.sh && ./script.sh
      
      - name: Build and push
        run: docker build -t mousse2025/visits-service:latest .
             docker push  mousse2025/visits-service:latest
        
  deploy:
    runs-on: self-hosted
    name: build example and deploy to minikube
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster !
      run: kubectl get pods -A
    - name: Build image
      run: |
        export SHELL=/bin/bash
        eval $(minikube -p minikube docker-env)  
    - name: Deploy to minikube
      run:
        kubectl apply -f devops /
    - name: Test service URLs
      run: |
        minikube service list
        # minikube service example --url
        # echo "------------------opening the service------------------"
        # curl $(minikube service example --url)        

      

  
